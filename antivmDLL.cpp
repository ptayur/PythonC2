#include "pch.h"
#include <vector>
#include <windows.h>
#include <string>

extern "C" __declspec(dllexport)
bool CheckRegExisting() {
    std::vector<std::pair<unsigned int, std::vector<unsigned int>>> regkeys = {
        {0x80000002, {0x48,0x41,0x52,0x44,0x57,0x41,0x52,0x45,0x5c,0x5c,0x44,0x45,0x56,0x49,0x43,0x45,0x4d,0x41,0x50,0x5c,0x5c,0x53,0x63,0x73,0x69,0x5c,0x5c,0x53,0x63,0x73,0x69,0x20,0x50,0x6f,0x72,0x74,0x20,0x32,0x5c,0x5c,0x53,0x63,0x73,0x69,0x20,0x42,0x75,0x73,0x20,0x30,0x5c,0x5c,0x54,0x61,0x72,0x67,0x65,0x74,0x20,0x49,0x64,0x20,0x30,0x5c,0x5c,0x4c,0x6f,0x67,0x69,0x63,0x61,0x6c,0x20,0x55,0x6e,0x69,0x74,0x20,0x49,0x64,0x20,0x30,0x5c,0x5c,0x49,0x64,0x65,0x6e,0x74,0x69,0x66,0x69,0x65,0x72}},
        {0x80000002, {0x53,0x59,0x53,0x54,0x45,0x4d,0x5c,0x5c,0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x43,0x6f,0x6e,0x74,0x72,0x6f,0x6c,0x53,0x65,0x74,0x5c,0x5c,0x45,0x6e,0x75,0x6d,0x5c,0x5c,0x53,0x43,0x53,0x49,0x5c,0x5c,0x44,0x69,0x73,0x6b,0x26,0x56,0x65,0x6e,0x5f,0x56,0x4d,0x77,0x61,0x72,0x65,0x5f,0x26,0x50,0x72,0x6f,0x64,0x5f,0x56,0x4d,0x77,0x61,0x72,0x65,0x5f,0x56,0x69,0x72,0x74,0x75,0x61,0x6c,0x5f,0x53}},
        {0x80000002, {0x53,0x59,0x53,0x54,0x45,0x4d,0x5c,0x5c,0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x43,0x6f,0x6e,0x74,0x72,0x6f,0x6c,0x53,0x65,0x74,0x5c,0x5c,0x43,0x6f,0x6e,0x74,0x72,0x6f,0x6c,0x5c,0x5c,0x43,0x72,0x69,0x74,0x69,0x63,0x61,0x6c,0x44,0x65,0x76,0x69,0x63,0x65,0x44,0x61,0x74,0x61,0x62,0x61,0x73,0x65,0x5c,0x5c,0x72,0x6f,0x6f,0x74,0x23,0x76,0x6d,0x77,0x76,0x6d,0x63,0x69,0x68,0x6f,0x73,0x74,0x64,0x65,0x76}},
        {0x80000002, {0x53,0x59,0x53,0x54,0x45,0x4d,0x5c,0x5c,0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x43,0x6f,0x6e,0x74,0x72,0x6f,0x6c,0x53,0x65,0x74,0x5c,0x5c,0x43,0x6f,0x6e,0x74,0x72,0x6f,0x6c,0x5c,0x5c,0x56,0x69,0x72,0x74,0x75,0x61,0x6c,0x44,0x65,0x76,0x69,0x63,0x65,0x44,0x72,0x69,0x76,0x65,0x72,0x44,0x72,0x69,0x76,0x65,0x72,0x73}},
        {0x80000002, {0x53,0x59,0x53,0x54,0x45,0x4d,0x5c,0x5c,0x43,0x6f,0x6e,0x74,0x72,0x6f,0x6c,0x53,0x65,0x74,0x30,0x30,0x31,0x5c,0x5c,0x53,0x65,0x72,0x76,0x69,0x63,0x65,0x73,0x5c,0x5c,0x56,0x42,0x6f,0x78,0x4d,0x6f,0x75,0x73,0x65}},
        {0x80000002, {0x48,0x41,0x52,0x44,0x57,0x41,0x52,0x45,0x5c,0x5c,0x41,0x43,0x50,0x49,0x5c,0x5c,0x44,0x53,0x44,0x54,0x5c,0x5c,0x56,0x42,0x4f,0x58,0x5f,0x5f}},
        {0x80000002, {0x48,0x41,0x52,0x44,0x57,0x41,0x52,0x45,0x5c,0x5c,0x41,0x43,0x50,0x49,0x5c,0x5c,0x46,0x41,0x44,0x54,0x5c,0x5c,0x56,0x42,0x4f,0x58,0x5f,0x5f}},
        {0x80000002, {0x48,0x41,0x52,0x44,0x57,0x41,0x52,0x45,0x5c,0x5c,0x41,0x43,0x50,0x49,0x5c,0x5c,0x52,0x53,0x44,0x54,0x5c,0x5c,0x56,0x42,0x4f,0x58,0x5f,0x5f}},
        {0x80000002, {0x53,0x4f,0x46,0x54,0x57,0x41,0x52,0x45,0x5c,0x5c,0x4f,0x72,0x61,0x63,0x6c,0x65,0x5c,0x5c,0x56,0x69,0x72,0x74,0x75,0x61,0x6c,0x42,0x6f,0x78,0x20,0x47,0x75,0x65,0x73,0x74,0x20,0x41,0x64,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73}},
        {0x80000002, {0x53,0x4f,0x46,0x54,0x57,0x41,0x52,0x45,0x5c,0x5c,0x56,0x4d,0x77,0x61,0x72,0x65,0x2c,0x20,0x49,0x6e,0x63,0x2e,0x5c,0x5c,0x56,0x4d,0x77,0x61,0x72,0x65,0x20,0x54,0x6f,0x6f,0x6c,0x73}}
    };
    for (auto it = regkeys.begin(); it != regkeys.end(); it++) {
        unsigned int uiKey = it->first;
        std::vector<unsigned int> vhPath = it->second;
        std::string sPath = "";
        for (int i = 0; i < static_cast<int>(vhPath.size()); i++) {
            sPath += static_cast<char>(vhPath[i]);
        }
        HKEY hKey;
        HKEY phKey = NULL;
        hKey = ((HKEY)(ULONG_PTR)((LONG)uiKey));
        LONG lResult = RegOpenKeyA(hKey, sPath.c_str(), &phKey);
        if (lResult == ERROR_SUCCESS) {
            RegCloseKey(phKey);
            return false;
        }
    }
    return true;
}

BOOL APIENTRY DllMain( HMODULE hModule,
                       DWORD  ul_reason_for_call,
                       LPVOID lpReserved
                     )
{
    switch (ul_reason_for_call)
    {
    case DLL_PROCESS_ATTACH:
    case DLL_THREAD_ATTACH:
    case DLL_THREAD_DETACH:
    case DLL_PROCESS_DETACH:
        break;
    }
    return TRUE;
}

